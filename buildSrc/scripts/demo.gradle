// ------------- compiling demo source ---------------

sourceSets {
    demo {
        compileClasspath += sourceSets.main.output + configurations.compile
        runtimeClasspath += sourceSets.main.output
        groovy {
            srcDir 'src/demo/groovy'
        }
        resources {
            srcDir 'src/demo/resources'
        }
    }
}

// ---------------- dynamic tasks to run demos ------------------
def allDemoNames = []
new File('src/demo/groovy').eachFileMatch(~/.*Demo.groovy/) { file ->
    def taskName = file.name - '.groovy'
    task "$taskName"(type: JavaExec) {
        group = "Demo"
        description = "Run the $taskName program"
        main = taskName
        classpath sourceSets.main.runtimeClasspath + sourceSets.demo.runtimeClasspath
    }
    allDemoNames << taskName
}

task allDemos(dependsOn: allDemoNames) {}
